{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,iBA+BpC,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MArCPP,EAAKC,KAAKc,iBAAiB,UAI3B,SAAkBC,GAChBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcb,MAAMc,OACzCC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAE/CrB,EAAKI,UAAUoB,aAAa,YAAY,GAExC,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCpB,EAAcoB,EAAGP,GACdQ,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA6B,OAAOC,QAAQ,uBAAqBtB,QAAiBC,UAEtDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA6B,OAAOG,QAAQ,sBAAoBxB,QAAiBC,UAExDW,GAASI,EAEXR,YAAW,KACTd,EAAKI,UAAU2B,gBAAgB,cAC9Bb,EAhCsB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst NOTIFICATION_DELAY = 2000;\n\nconst refs = {\n  form: document.querySelector('.form'),\n  submitBtn: document.querySelector('[data-start]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n// refs.submitBtn.disabled = true;\n// refs.submitBtn.setAttribute('disabled', true);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  let step = Number(event.currentTarget.step.value);\n  let amount = Number(event.currentTarget.amount.value);\n\n  refs.submitBtn.setAttribute('disabled', true);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  setTimeout(() => {\n    refs.submitBtn.removeAttribute('disabled');\n  }, delay + NOTIFICATION_DELAY);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   submitBtn: document.querySelector('submit'),\n// };\n\n// refs.form.addEventListener('submit', onSubmit);\n\n// function onSubmit(event) {\n//   event.preventDefault();\n\n//   let delay = Number(event.currentTarget.delay.value);\n//   let step = Number(event.currentTarget.step.value);\n//   let amount = Number(event.currentTarget.amount.value);\n\n//   for (let i = 1; i <= amount; i += 1) {\n//     createPromise(i, delay)\n//       .then(({ position, delay }) => {\n//         Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += step;\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","setAttribute","i","then","Notify","success","catch","failure","removeAttribute"],"version":3,"file":"03-promises.81ab6444.js.map"}